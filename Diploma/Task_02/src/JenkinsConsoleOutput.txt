Started by an SCM change
Checking out git git@github.com:staratel74/nginx-repo.git into /var/lib/jenkins/workspace/Diploma_Pipeline@script/674594b2930fd8af64c7352ed4a483485a76b06076e96ca18411f8b76690e65a to read Jenkinsfile.groovy
Selected Git installation does not exist. Using Default
The recommended git tool is: NONE
using credential github-staratel74
 > git rev-parse --resolve-git-dir /var/lib/jenkins/workspace/Diploma_Pipeline@script/674594b2930fd8af64c7352ed4a483485a76b06076e96ca18411f8b76690e65a/.git # timeout=10
Fetching changes from the remote Git repository
 > git config remote.origin.url git@github.com:staratel74/nginx-repo.git # timeout=10
Fetching upstream changes from git@github.com:staratel74/nginx-repo.git
 > git --version # timeout=10
 > git --version # 'git version 2.34.1'
using GIT_SSH to set credentials github-staratel74
Verifying host key using known hosts file
 > git fetch --tags --force --progress -- git@github.com:staratel74/nginx-repo.git +refs/heads/*:refs/remotes/origin/* # timeout=10
 > git rev-parse refs/remotes/origin/main^{commit} # timeout=10
Checking out Revision 35d8910deb91e5414074829bb7b52edc3c9f64fd (refs/remotes/origin/main)
 > git config core.sparsecheckout # timeout=10
 > git checkout -f 35d8910deb91e5414074829bb7b52edc3c9f64fd # timeout=10
Commit message: "Diploma v1.10.2"
 > git rev-list --no-walk 47d9795514ef43938f2012f9ede7d108b2545af7 # timeout=10
[Pipeline] Start of Pipeline
[Pipeline] node
Running on Jenkins in /var/lib/jenkins/workspace/Diploma_Pipeline
[Pipeline] {
[Pipeline] stage
[Pipeline] { (Declarative: Checkout SCM)
[Pipeline] checkout
Selected Git installation does not exist. Using Default
The recommended git tool is: NONE
using credential github-staratel74
Cloning the remote Git repository
Cloning repository git@github.com:staratel74/nginx-repo.git
 > git init /var/lib/jenkins/workspace/Diploma_Pipeline # timeout=10
Fetching upstream changes from git@github.com:staratel74/nginx-repo.git
 > git --version # timeout=10
 > git --version # 'git version 2.34.1'
using GIT_SSH to set credentials github-staratel74
Verifying host key using known hosts file
 > git fetch --tags --force --progress -- git@github.com:staratel74/nginx-repo.git +refs/heads/*:refs/remotes/origin/* # timeout=10
 > git config remote.origin.url git@github.com:staratel74/nginx-repo.git # timeout=10
 > git config --add remote.origin.fetch +refs/heads/*:refs/remotes/origin/* # timeout=10
Avoid second fetch
 > git rev-parse refs/remotes/origin/main^{commit} # timeout=10
Checking out Revision 35d8910deb91e5414074829bb7b52edc3c9f64fd (refs/remotes/origin/main)
 > git config core.sparsecheckout # timeout=10
 > git checkout -f 35d8910deb91e5414074829bb7b52edc3c9f64fd # timeout=10
Commit message: "Diploma v1.10.2"
[Pipeline] }
[Pipeline] // stage
[Pipeline] withEnv
[Pipeline] {
[Pipeline] withEnv
[Pipeline] {
[Pipeline] stage
[Pipeline] { (Clone Repository)
[Pipeline] git
Selected Git installation does not exist. Using Default
The recommended git tool is: NONE
using credential github-staratel74
 > git rev-parse --resolve-git-dir /var/lib/jenkins/workspace/Diploma_Pipeline/.git # timeout=10
Fetching changes from the remote Git repository
 > git config remote.origin.url git@github.com:staratel74/nginx-repo.git # timeout=10
Fetching upstream changes from git@github.com:staratel74/nginx-repo.git
 > git --version # timeout=10
 > git --version # 'git version 2.34.1'
using GIT_SSH to set credentials github-staratel74
Verifying host key using known hosts file
 > git fetch --tags --force --progress -- git@github.com:staratel74/nginx-repo.git +refs/heads/*:refs/remotes/origin/* # timeout=10
 > git rev-parse refs/remotes/origin/main^{commit} # timeout=10
Checking out Revision 35d8910deb91e5414074829bb7b52edc3c9f64fd (refs/remotes/origin/main)
 > git config core.sparsecheckout # timeout=10
 > git checkout -f 35d8910deb91e5414074829bb7b52edc3c9f64fd # timeout=10
 > git branch -a -v --no-abbrev # timeout=10
 > git checkout -b main 35d8910deb91e5414074829bb7b52edc3c9f64fd # timeout=10
Commit message: "Diploma v1.10.2"
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Build Docker Image)
[Pipeline] script
[Pipeline] {
[Pipeline] isUnix
[Pipeline] withEnv
[Pipeline] {
[Pipeline] sh
+ docker build -t staratel/nginx-repo:v1.10.0 .
#0 building with "default" instance using docker driver

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 660B done
#1 DONE 0.0s

#2 [internal] load metadata for docker.io/library/ubuntu:latest
#2 DONE 1.0s

#3 [internal] load .dockerignore
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [1/3] FROM docker.io/library/ubuntu:latest@sha256:2e863c44b718727c860746568e1d54afd13b2fa71b160f5cd9058fc436217b30
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 436B done
#5 DONE 0.0s

#6 [2/3] RUN apt-get update && apt-get install -y nginx && apt-get install mc -y
#6 CACHED

#7 [3/3] COPY index.html /var/www/html/index.html
#7 DONE 0.0s

#8 exporting to image
#8 exporting layers done
#8 writing image sha256:c9b99c941edbbf57dbf522c9f08338eff3a2262f5147038ed8fd255ee3a48aad done
#8 naming to docker.io/staratel/nginx-repo:v1.10.0 done
#8 DONE 0.0s
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // script
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Push Docker Image)
[Pipeline] script
[Pipeline] {
[Pipeline] withEnv
[Pipeline] {
[Pipeline] withDockerRegistry
$ docker login -u staratel -p ******** https://index.docker.io/v1/
WARNING! Using --password via the CLI is insecure. Use --password-stdin.
WARNING! Your password will be stored unencrypted in /var/lib/jenkins/workspace/Diploma_Pipeline@tmp/142e785e-d41f-49c2-b511-519c3de059b2/config.json.
Configure a credential helper to remove this warning. See
https://docs.docker.com/engine/reference/commandline/login/#credentials-store

Login Succeeded
[Pipeline] {
[Pipeline] isUnix
[Pipeline] withEnv
[Pipeline] {
[Pipeline] sh
+ docker tag staratel/nginx-repo:v1.10.0 index.docker.io/staratel/nginx-repo:v1.10.0
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] isUnix
[Pipeline] withEnv
[Pipeline] {
[Pipeline] sh
+ docker push index.docker.io/staratel/nginx-repo:v1.10.0
The push refers to repository [docker.io/staratel/nginx-repo]
a0bbe9a1b856: Preparing
a345f4ee30c5: Preparing
a30a5965a4f7: Preparing
a345f4ee30c5: Layer already exists
a30a5965a4f7: Layer already exists
a0bbe9a1b856: Pushed
v1.10.0: digest: sha256:163a0b1661fc9c0f8d5518b786f1816115b533f65a727ba7c5117ef66d1d50f1 size: 948
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // withDockerRegistry
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // script
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Deploy to Kubernetes)
[Pipeline] script
[Pipeline] {
[Pipeline] withCredentials
Masking supported pattern matches of $KUBECONFIG
[Pipeline] {
[Pipeline] sh
+ kubectl --kubeconfig=**** apply -f -
deployment.apps/nginx-deployment unchanged
[Pipeline] sh
+ kubectl --kubeconfig=**** apply -f -
service/nginx-service unchanged
[Pipeline] }
[Pipeline] // withCredentials
[Pipeline] }
[Pipeline] // script
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Declarative: Post Actions)
[Pipeline] cleanWs
[WS-CLEANUP] Deleting project workspace...
[WS-CLEANUP] Deferred wipeout is used...
[WS-CLEANUP] done
[Pipeline] }
[Pipeline] // stage
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // node
[Pipeline] End of Pipeline
Finished: SUCCESS
